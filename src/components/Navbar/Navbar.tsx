import { Fragment } from "react";
import { Disclosure } from "@headlessui/react";
import { XMarkIcon } from "@heroicons/react/24/outline";
import randomAlphaNumeric from "src/utils/randomAlphaNumeric";

const navigation = [
  {
    name: "Facebook",
    href: "",
    icon: (props: any) => (
      <svg viewBox="0 0 17 20" fill="currentColor" {...props}>
        <path
          d="M5.33333 12.6191L6.27169 12.406C6.29128 12.4016 6.32445 12.3942 6.36364 12.3816C6.62283 12.3134 6.84491 12.1491 6.98312 11.9234C7.12132 11.6976 7.16485 11.428 7.10453 11.1714L7.10076 11.1551C7.06974 11.0322 7.01554 10.916 6.94097 10.8126C6.8359 10.6817 6.70585 10.5722 6.55809 10.4901C6.38413 10.3928 6.20209 10.3102 6.01392 10.243L4.98512 9.87389C4.40779 9.66306 3.83045 9.45815 3.24709 9.25768C2.86949 9.126 2.54917 9.00986 2.27105 8.92479C2.21812 8.91042 2.16559 8.89463 2.11353 8.87745C1.77738 8.77684 1.54072 8.73468 1.34099 8.7332C1.20749 8.72832 1.07452 8.75205 0.951324 8.80274C0.822608 8.85743 0.707051 8.93808 0.612159 9.03945C0.565082 9.09191 0.520804 9.14672 0.479506 9.20368C0.399209 9.32476 0.332975 9.45428 0.282039 9.58982C0.090899 10.1439 -0.00437948 10.7255 0.000154514 11.3105C0.00392301 11.8386 0.0182432 12.517 0.314447 12.9771C0.386049 13.0955 0.481769 13.1976 0.595578 13.2767C0.806614 13.4195 1.01916 13.4387 1.2415 13.4542C1.57313 13.4772 1.89345 13.398 2.21377 13.3248L5.33107 12.6183L5.33333 12.6191ZM15.8022 7.73011C15.5461 7.20241 15.2016 6.72057 14.7832 6.30462C14.7291 6.25172 14.6712 6.20277 14.6099 6.15815C14.5532 6.11643 14.4943 6.07767 14.4335 6.04201C14.3709 6.00834 14.3065 5.97797 14.2406 5.95102C14.1104 5.90081 13.971 5.87812 13.8313 5.88445C13.6979 5.89184 13.5675 5.92883 13.4492 5.99023C13.2705 6.07752 13.0768 6.21807 12.8191 6.45257C12.7837 6.48734 12.7392 6.52655 12.6985 6.56353C12.4867 6.75956 12.25 7.00146 11.9689 7.28256C11.534 7.71383 11.1067 8.14732 10.6808 8.58451L9.9196 9.35976C9.78059 9.50116 9.65402 9.65385 9.54123 9.81619C9.44467 9.95356 9.37632 10.1081 9.34 10.2711C9.31962 10.3964 9.32268 10.5242 9.34904 10.6484L9.35281 10.6647C9.41297 10.921 9.57213 11.1445 9.79678 11.288C10.0214 11.4315 10.294 11.4838 10.5572 11.434C10.5889 11.4296 10.6203 11.4237 10.6514 11.4163L14.7078 10.496C15.0282 10.4235 15.3523 10.3569 15.6394 10.1927C15.8324 10.084 16.0155 9.97523 16.1414 9.75627C16.2084 9.63566 16.249 9.50261 16.2605 9.36568C16.323 8.82271 16.0344 8.2065 15.8022 7.73011ZM8.54033 9.40415C8.83427 9.04167 8.83426 8.50166 8.85989 8.05929C8.94883 6.5835 9.04154 5.10772 9.11615 3.63119C9.14404 3.07194 9.20509 2.52009 9.17117 1.95641C9.14328 1.49185 9.14027 0.957754 8.84105 0.576046C8.31346 -0.0971206 7.18743 -0.0416396 6.41941 0.063404C6.18249 0.0955243 5.94731 0.138974 5.7147 0.193599C5.48106 0.24834 5.24892 0.308259 5.02281 0.380014C4.28569 0.616732 3.24935 1.0517 3.07449 1.88539C2.97501 2.35661 3.21016 2.83818 3.39105 3.26871C3.61188 3.78949 3.91261 4.25923 4.18696 4.74968C4.91277 6.04497 5.65139 7.33287 6.38776 8.6215C6.60859 9.00617 6.84752 9.49292 7.27336 9.69265C7.302 9.70448 7.33064 9.71484 7.36003 9.72446C7.55072 9.79547 7.75949 9.80879 7.95771 9.76366L7.99314 9.75627C8.17704 9.7067 8.34285 9.60832 8.47324 9.47294C8.49736 9.45075 8.51922 9.42856 8.54108 9.40415H8.54033ZM8.18834 13.3551C8.07362 13.1967 7.9108 13.078 7.72317 13.016C7.53553 12.9539 7.33271 12.9517 7.14372 13.0097C7.09925 13.024 7.05593 13.0416 7.01408 13.0622C6.94932 13.0946 6.88753 13.1325 6.82942 13.1754C6.6635 13.3037 6.51529 13.4526 6.38851 13.6185C6.3561 13.6592 6.32595 13.7132 6.28676 13.7487L5.63406 14.629C5.26474 15.1231 4.8992 15.618 4.53818 16.1203C4.30152 16.445 4.09802 16.7195 3.93597 16.9614C3.90583 17.0072 3.87417 17.0575 3.84553 17.099C3.65183 17.3919 3.54254 17.6064 3.48601 17.7973C3.44379 17.9241 3.43041 18.0584 3.44682 18.1908C3.46491 18.3284 3.51239 18.4608 3.5855 18.5799C3.6247 18.6391 3.6669 18.6968 3.71212 18.7523C3.8098 18.8626 3.91978 18.9619 4.03998 19.0482C4.4907 19.3559 4.98362 19.5771 5.50216 19.748C5.93403 19.8885 6.38248 19.9729 6.83621 19.998C6.91384 20.0017 6.99147 20.0002 7.06835 19.9936C7.13963 19.987 7.21056 19.9772 7.28089 19.964C7.35125 19.9479 7.42069 19.9282 7.48891 19.9048C7.62154 19.856 7.74223 19.7804 7.84315 19.6829C7.93887 19.5889 8.01274 19.4758 8.05871 19.3507C8.13408 19.1658 8.18382 18.932 8.21699 18.5844C8.21925 18.5348 8.22678 18.4756 8.23206 18.4216C8.25768 18.1331 8.26975 17.7928 8.28784 17.3949C8.32025 16.7816 8.34512 16.1713 8.36471 15.5596L8.40692 14.4707C8.41672 14.2206 8.40842 13.9425 8.33758 13.6932C8.30643 13.5734 8.25605 13.4593 8.18834 13.3551ZM15.5543 15.0587C15.4186 14.9115 15.2256 14.7658 14.9211 14.5853C14.8774 14.5609 14.8254 14.5291 14.7779 14.501C14.5247 14.3508 14.2194 14.194 13.8629 14.0039C13.315 13.708 12.7671 13.421 12.2131 13.1354L11.2356 12.6265C11.1851 12.6117 11.1338 12.5762 11.0856 12.5532C10.8976 12.459 10.698 12.3891 10.4917 12.3454C10.4206 12.3319 10.3485 12.3245 10.2761 12.3232C10.2292 12.3229 10.1824 12.3257 10.1359 12.3313C9.94021 12.361 9.75906 12.4505 9.61829 12.5872C9.47753 12.7239 9.38435 12.9008 9.35206 13.0925C9.33774 13.2146 9.34226 13.3381 9.36638 13.4579C9.41386 13.7139 9.52993 13.9661 9.65052 14.1873L10.1721 15.1483C10.463 15.6897 10.757 16.2283 11.0584 16.7653C11.2529 17.1152 11.4149 17.4148 11.5664 17.6634C11.5951 17.71 11.6275 17.7603 11.6523 17.8039C11.837 18.1021 11.9847 18.2899 12.1347 18.4253C12.2346 18.5196 12.3545 18.5911 12.4859 18.6346C12.6172 18.6781 12.7568 18.6925 12.8944 18.6768C12.9662 18.6683 13.0374 18.6559 13.1077 18.6398C13.2519 18.602 13.3913 18.5481 13.523 18.4793C13.9198 18.2611 14.2854 17.9924 14.6106 17.6804C15.001 17.3031 15.3462 16.8918 15.6145 16.4214C15.6522 16.3548 15.6839 16.286 15.711 16.2142C15.7363 16.1485 15.7582 16.0816 15.7766 16.0138C15.7924 15.9442 15.8045 15.8747 15.8128 15.8044C15.8263 15.6663 15.8101 15.5269 15.7653 15.3953C15.721 15.269 15.649 15.1539 15.5543 15.058V15.0587Z"
          fill="#383533"
        />
      </svg>
    ),
  },
  {
    name: "TikTok",
    href: "",
    icon: (props: any) => (
      <svg fill="currentColor" viewBox="0 0 512 512" {...props}>
        <path d="M412.19,118.66a109.27,109.27,0,0,1-9.45-5.5,132.87,132.87,0,0,1-24.27-20.62c-18.1-20.71-24.86-41.72-27.35-56.43h.1C349.14,23.9,350,16,350.13,16H267.69V334.78c0,4.28,0,8.51-.18,12.69,0,.52-.05,1-.08,1.56,0,.23,0,.47-.05.71,0,.06,0,.12,0,.18a70,70,0,0,1-35.22,55.56,68.8,68.8,0,0,1-34.11,9c-38.41,0-69.54-31.32-69.54-70s31.13-70,69.54-70a68.9,68.9,0,0,1,21.41,3.39l.1-83.94a153.14,153.14,0,0,0-118,34.52,161.79,161.79,0,0,0-35.3,43.53c-3.48,6-16.61,30.11-18.2,69.24-1,22.21,5.67,45.22,8.85,54.73v.2c2,5.6,9.75,24.71,22.38,40.82A167.53,167.53,0,0,0,115,470.66v-.2l.2.2C155.11,497.78,199.36,496,199.36,496c7.66-.31,33.32,0,62.46-13.81,32.32-15.31,50.72-38.12,50.72-38.12a158.46,158.46,0,0,0,27.64-45.93c7.46-19.61,9.95-43.13,9.95-52.53V176.49c1,.6,14.32,9.41,14.32,9.41s19.19,12.3,49.13,20.31c21.48,5.7,50.42,6.9,50.42,6.9V131.27C453.86,132.37,433.27,129.17,412.19,118.66Z" />
      </svg>
    ),
  },
  {
    name: "Instagram",
    href: "",
    icon: (props: any) => (
      <svg fill="currentColor" viewBox="0 0 24 24" {...props}>
        <path
          fillRule="evenodd"
          d="M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z"
          clipRule="evenodd"
        />
      </svg>
    ),
  },
  {
    name: "Youtube",
    href: "",
    icon: (props: any) => (
      <svg viewBox="0 0 24 16" fill="currentColor" {...props}>
        <path
          d="M23.1256 2.49818C22.8645 1.51636 22.0919 0.741818 21.109 0.476364C19.3317 1.73395e-07 12.2008 0 12.2008 0C12.2008 0 5.07351 1.73395e-07 3.2926 0.476364C2.31329 0.738182 1.54071 1.51273 1.27593 2.49818C0.800781 4.28 0.800781 8 0.800781 8C0.800781 8 0.800781 11.72 1.27593 13.5018C1.53708 14.4836 2.30966 15.2582 3.2926 15.5236C5.07351 16 12.2008 16 12.2008 16C12.2008 16 19.3317 16 21.109 15.5236C22.0883 15.2618 22.8609 14.4873 23.1256 13.5018C23.6008 11.72 23.6008 8 23.6008 8C23.6008 8 23.6008 4.28 23.1256 2.49818Z"
          fill="#383533"
        />
        <path
          d="M9.92296 11.4291L15.846 8L9.92296 4.57091V11.4291Z"
          fill="white"
        />
      </svg>
    ),
  },
];

interface Link {
  name: string;
  path: string;
}

interface Props {
  links: Link[];
  path?: string;
}

export default function Navbar({ links, path }: Props) {
  return (
    <Disclosure as="nav" className="bg-white text-brand-black shadow">
      {({ open }) => (
        <>
          <div className="mx-auto max-w-7xl p-5 sm:px-6 lg:px-16">
            <div className="relative flex justify-between sm:h-28">
              <div className="absolute inset-y-0 right-0 flex items-center sm:hidden">
                {/* Mobile menu button */}
                <Disclosure.Button className="hover:bg-black-100 hover:text-black-500 inline-flex items-center justify-center rounded-md py-2 pl-2 text-black focus:outline-none">
                  <span className="sr-only">Open main menu</span>
                  {open ? (
                    <XMarkIcon className="block h-6 w-6" aria-hidden="true" />
                  ) : (
                    <svg
                      className="block h-6 w-6"
                      aria-hidden="true"
                      width="16"
                      height="14"
                      viewBox="0 0 16 14"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 1H15M5 5H15M1 9H15M5 13H15"
                        stroke="#383533"
                        strokeWidth="2"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </Disclosure.Button>
              </div>
              <div className="flex flex-1 flex-row items-center sm:items-center">
                <div className="hidden flex-1 sm:inline-flex sm:gap-8">
                  {links.reduce((acc, link, index) => {
                    if (index < 2)
                      acc.push(
                        <a
                          key={randomAlphaNumeric(4 + index)}
                          href={link.path}
                          className={`inline-flex items-center border-b-2 ${
                            path == link.path
                              ? "border-brand-black"
                              : "border-transparent"
                          } text-base hover:border-b-2 hover:border-brand-black`}
                        >
                          {link.name}
                        </a>
                      );
                    return acc;
                  }, [] as any[])}
                </div>
                <div className="flex-1 sm:text-center">
                  <a href="/">
                    <span className="font-cinzel text-2xl">HENNA HAPPENS</span>
                  </a>
                </div>
                <div className="hidden flex-1 justify-end font-montse sm:inline-flex sm:space-x-8">
                  {/* TODO: Have underline on active page */}
                  <div className="flex gap-8">
                    {links.reduce((acc, link, index) => {
                      if (index > 1 && link.name != "events")
                        acc.push(
                          <a
                            key={randomAlphaNumeric(4 + index)}
                            href={link.path}
                            className="inline-flex items-center border-b-2 border-transparent text-base hover:border-b-2 hover:border-black"
                          >
                            {link.name}
                          </a>
                        );
                      return acc;
                    }, [] as any[])}
                  </div>
                </div>
              </div>
            </div>

            <Disclosure.Panel className="sm:hidden">
              <div className="pb-44 pt-15">
                {links.map((link, index) => {
                  return (
                    <div
                      key={randomAlphaNumeric(4 + index)}
                      className="py-7 font-cinzel text-3xl leading-none"
                    >
                      <Disclosure.Button as="a" href={link.path}>
                        {link.name}
                      </Disclosure.Button>
                    </div>
                  );
                })}
              </div>
              <div className="flex justify-between pb-4">
                {navigation.map((item) => (
                  <a key={item.name} href={item.href}>
                    <span className="sr-only">{item.name}</span>
                    <item.icon className="h-6 w-6" aria-hidden="true" />
                  </a>
                ))}
              </div>
            </Disclosure.Panel>
          </div>
        </>
      )}
    </Disclosure>
  );
}
